tokenized_lyrics <- tokenized_lyrics %>% na.omit()
# Cretae the Decade variable
tokenized_lyrics <- tokenized_lyrics %>%
mutate(decade = ifelse(year >= 2010, "2010s",
ifelse(year >= 2000, "2000s",
ifelse(year >=1990, "1990s",
ifelse(year >= 1980, "1980s", "1970s")))))
tokenized_lyrics %>%
count(word, sort = TRUE)
lyrics <- tokenized_lyrics %>%
anti_join(stop_words)
lyrics %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ggplot(aes(reorder(word, -n), n)) +
geom_bar(stat = "identity") +
ylab("Number of Occurences") +
xlab("Word")
decade_count %>%
ggplot(aes(reorder(word, -n), n, fill = decade)) +
geom_col(show.legend = FALSE) +
facet_wrap(~decade, ncol = 2, scales = "free_x") +
ylab("Number of Occurences") +
xlab("Word")
lyrics_decade_count <- lyrics %>%
group_by(decade) %>%
count(word, sort = TRUE)
decade_count <- setDT(lyrics_decade_count)
decade_count <- decade_count[, head(.SD, 10), by = decade]
decade_count %>%
ggplot(aes(reorder(word, -n), n, fill = decade)) +
geom_col(show.legend = FALSE) +
facet_wrap(~decade, ncol = 2, scales = "free_x") +
ylab("Number of Occurences") +
xlab("Word")
sentiment <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(decade, year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(sentiment, aes(year, sentiment, fill = decade)) +
geom_col(show.legend = FALSE) +
facet_wrap(~decade, ncol = 2, scales = "free_x")
afinn <- lyrics %>%
inner_join(get_sentiments("afinn")) %>%
group_by(year) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
bing <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative,
method = "BING")
nrc <- lyrics %>%
inner_join(get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative"))) %>%
count(year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative,
method = "NRC")
all_sentiments <- bind_rows(nrc, bing, afinn)
all_sentiments %>%
ggplot(aes(year, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y")
View(all_sentiments)
word_counts <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = TRUE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
#wordcloud
lyrics %>%
count(word) %>%
with(wordcloud(word, n, max.words = 50))
lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 100)
sentiment <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(decade, year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(sentiment, aes(year, sentiment, fill = decade)) +
geom_col(show.legend = FALSE) +
facet_wrap(~decade, ncol = 2, scales = "free_x")
afinn <- lyrics %>%
inner_join(get_sentiments("afinn")) %>%
group_by(year) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
bing <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative,
method = "BING")
nrc <- lyrics %>%
inner_join(get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative"))) %>%
count(year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative,
method = "NRC")
all_sentiments <- bind_rows(nrc, bing, afinn)
all_sentiments %>%
ggplot(aes(year, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y")
View(word_counts)
sentiment_word_counts <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
sentiment_word_counts <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
sentiment_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = TRUE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
lyric_words <- lyrics %>%
count(decade, word, sort = TRUE) %>%
bind_tf_idf(word, decade, n)
View(lyric_words)
lyric_words %>%
arrange(desc(tf_idf))
lyric_words %>%
arrange(desc(tf_idf)) %>%
mutate()
lyric_words %>%
arrange(desc(tf_idf)) %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(decade) %>%
top_n(15) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = decade)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~decade, ncol = 2, scales = "free") +
coord_flip()
ap_sentiments <- lyric_words %>%
inner_join(get_sentiments("bing"))
ap_sentiments
ap_sentiments %>%
count(sentiment, word, wt = n) %>%
ungroup() %>%
filter(n >= 100) %>%
mutate(n = ifelse(sentiment == "negative", -n, n)) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_bar(stat = "identity") +
ylab("Contribution to sentiment") +
coord_flip()
lyrics %>%
group_by(word) %>%
count(word, sort = TRUE)
year_term_count <- lyrics %>%
group_by(year) %>%
count(word, sort = TRUE) %>%
mutate(year_total = sum(n))
#Looking at the most frequent ones
year_term_count %>%
filter(word %in% c("love", "baby", "girl", "time", "night", "feel")) %>%
ggplot(aes(year, n / year_total)) +
geom_point() +
geom_smooth() +
facet_wrap(~ word, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
ylab("% frequency of word in inaugural address")
lyrics %>%
group_by(word) %>%
count(word, sort = TRUE)
year_term_count <- lyrics %>%
group_by(year) %>%
count(word, sort = TRUE) %>%
mutate(year_total = sum(n))
#Looking at the most frequent ones
year_term_count %>%
filter(word %in% c("love", "baby", "girl", "time", "night", "feel")) %>%
ggplot(aes(year, n / year_total)) +
geom_point() +
geom_smooth() +
facet_wrap(~ word, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
ylab("% frequency of word in inaugural address")
# Looking at those contributing most to the sentiment
year_term_count %>%
filter(word %in% c("love", "hot", "boom", "bad", "break", "wild")) %>%
ggplot(aes(year, n / year_total)) +
geom_point() +
geom_smooth() +
facet_wrap(~ word, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
ylab("% frequency of word in inaugural address")
# Ones with high tf/idf - useless
year_term_count %>%
filter(word %in% c("ron", "physical", "romantic", "bum", "mum", "hol")) %>%
ggplot(aes(year, n / year_total)) +
geom_point() +
geom_smooth() +
facet_wrap(~ word, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
ylab("% frequency of word in inaugural address")
data("AssociatedPress")
AssociatedPress
ap_lda <- LDA(AssociatedPress, k = 2, control = list(seed = 1234))
ap_lda
?LDA
lyricDTM <- year_term_count %>%
cast_dtm(decade, word, n)
year_lda <- LDA(lyricDTM, k = 4, control = list(seed = 42))
lyricDTM <- year_term_count %>%
cast_dtm(decade, word, n)
View(year_term_count)
lyricDTM <- year_term_count %>%
cast_dtm(decade, word, n)
lyricDTM <- year_term_count %>%
cast_dtm(year, word, n)
year_lda <- LDA(lyricDTM, k = 4, control = list(seed = 42))
topics <- tidy(year_lda, matrix = "beta")
topic_words <- topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
topic_words %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
decade_term_count <- lyrics %>%
group_by(decade) %>%
count(word, sort = TRUE) %>%
mutate(decade_total = sum(n))
decadeLyricDTM <- decade_term_count %>%
cast_dtm(decade, word, n)
decade_lda <- LDA(decadeLyricDTM, k = 2, control = list(seed = 42))
decade_topics <- tidy(decade_lda, matrix = "beta")
decade_topic_words <- decade_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
decade_topic_words %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
beta_spread <- decade_topics %>%
mutate(topic = paste0("topic", topic)) %>%
spread(topic, beta) %>%
filter(topic1 > .001 | topic2 > .001) %>%
mutate(log_ratio = log2(topic2 / topic1))
beta_spread
beta_spread %>%
mutate(topic_num = ifelse(log_ratio > 0 , "Topic 2", "Topic 1")) %>%
filter(log_ratio > 20 | log_ratio < -20) %>%
mutate(term = reorder(term, log_ratio)) %>%
ggplot(aes(term, log_ratio, fill = topic_num)) +
geom_col(show.legend = TRUE) +
labs(y = "Uniqueness in Topic",
x = NULL) +
coord_flip()
decade_topics_gamma <- tidy(decade_lda, matrix = "gamma")
decade_topics_gamma
tidy(AssociatedPress)
year_lda <- LDA(lyricDTM, k = 2, control = list(seed = 42))
topics <- tidy(year_lda, matrix = "beta")
topic_words <- topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
topic_words %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
custom_stop_words <- bind_rows(tibble(word = c("ooh", "na", "ya", "la", "ey", "po", "oo", "tas", "ayy", "uh", "da", "whoa", "mmmm", "ayyy", "du",
"su", "x6"),
lexicon = c("custom")),
stop_words)
View(custom_stop_words)
# Feature Engineering -----------------------------------------------------------
tokenized_lyrics <- read.csv("Billboard_1970_2018_Tokenized_Lyrics.csv")
tokenized_lyrics <- tokenized_lyrics %>% na.omit()
# Cretae the Decade variable
tokenized_lyrics <- tokenized_lyrics %>%
mutate(decade = ifelse(year >= 2010, "2010s",
ifelse(year >= 2000, "2000s",
ifelse(year >=1990, "1990s",
ifelse(year >= 1980, "1980s", "1970s")))))
tokenized_lyrics %>%
count(word, sort = TRUE)
lyrics <- tokenized_lyrics %>%
anti_join(custom_stop_words)
lyrics %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ggplot(aes(reorder(word, -n), n)) +
geom_bar(stat = "identity") +
ylab("Number of Occurences") +
xlab("Word")
lyrics_decade_count <- lyrics %>%
group_by(decade) %>%
count(word, sort = TRUE)
decade_count <- setDT(lyrics_decade_count)
decade_count <- decade_count[, head(.SD, 10), by = decade]
decade_count %>%
ggplot(aes(reorder(word, -n), n, fill = decade)) +
geom_col(show.legend = FALSE) +
facet_wrap(~decade, ncol = 2, scales = "free_x") +
ylab("Number of Occurences") +
xlab("Word")
#wordcloud
lyrics %>%
count(word) %>%
with(wordcloud(word, n, max.words = 50))
sentiment <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(decade, year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(sentiment, aes(year, sentiment, fill = decade)) +
geom_col(show.legend = FALSE) +
facet_wrap(~decade, ncol = 2, scales = "free_x")
afinn <- lyrics %>%
inner_join(get_sentiments("afinn")) %>%
group_by(year) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
bing <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative,
method = "BING")
nrc <- lyrics %>%
inner_join(get_sentiments("nrc") %>%
filter(sentiment %in% c("positive", "negative"))) %>%
count(year, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative,
method = "NRC")
all_sentiments <- bind_rows(nrc, bing, afinn)
all_sentiments %>%
ggplot(aes(year, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y")
sentiment_word_counts <- lyrics %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
sentiment_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = TRUE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
lyric_words <- lyrics %>%
count(decade, word, sort = TRUE) %>%
bind_tf_idf(word, decade, n)
lyric_words %>%
arrange(desc(tf_idf))
lyric_words %>%
arrange(desc(tf_idf)) %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(decade) %>%
top_n(15) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = decade)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~decade, ncol = 2, scales = "free") +
coord_flip()
ap_sentiments <- lyric_words %>%
inner_join(get_sentiments("bing"))
ap_sentiments
ap_sentiments %>%
count(sentiment, word, wt = n) %>%
ungroup() %>%
filter(n >= 100) %>%
mutate(n = ifelse(sentiment == "negative", -n, n)) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_bar(stat = "identity") +
ylab("Contribution to sentiment") +
coord_flip()
lyrics %>%
group_by(word) %>%
count(word, sort = TRUE)
year_term_count <- lyrics %>%
group_by(year) %>%
count(word, sort = TRUE) %>%
mutate(year_total = sum(n))
#Looking at the most frequent ones
year_term_count %>%
filter(word %in% c("love", "baby", "girl", "time", "night", "feel")) %>%
ggplot(aes(year, n / year_total)) +
geom_point() +
geom_smooth() +
facet_wrap(~ word, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
ylab("% frequency of word in inaugural address")
# Looking at those contributing most to the sentiment
year_term_count %>%
filter(word %in% c("love", "hot", "boom", "bad", "break", "wild")) %>%
ggplot(aes(year, n / year_total)) +
geom_point() +
geom_smooth() +
facet_wrap(~ word, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
ylab("% frequency of word in inaugural address")
# Ones with high tf/idf - useless
year_term_count %>%
filter(word %in% c("ron", "physical", "romantic", "bum", "mum", "hol")) %>%
ggplot(aes(year, n / year_total)) +
geom_point() +
geom_smooth() +
facet_wrap(~ word, scales = "free_y") +
scale_y_continuous(labels = scales::percent_format()) +
ylab("% frequency of word in inaugural address")
data("AssociatedPress")
AssociatedPress
ap_lda <- LDA(AssociatedPress, k = 2, control = list(seed = 1234))
ap_lda
lyricDTM <- year_term_count %>%
cast_dtm(year, word, n)
year_lda <- LDA(lyricDTM, k = 2, control = list(seed = 42))
topics <- tidy(year_lda, matrix = "beta")
topic_words <- topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
topic_words %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
decade_term_count <- lyrics %>%
group_by(decade) %>%
count(word, sort = TRUE) %>%
mutate(decade_total = sum(n))
decadeLyricDTM <- decade_term_count %>%
cast_dtm(decade, word, n)
decade_lda <- LDA(decadeLyricDTM, k = 2, control = list(seed = 42))
decade_topics <- tidy(decade_lda, matrix = "beta")
decade_topic_words <- decade_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
decade_topic_words %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
beta_spread <- decade_topics %>%
mutate(topic = paste0("topic", topic)) %>%
spread(topic, beta) %>%
filter(topic1 > .001 | topic2 > .001) %>%
mutate(log_ratio = log2(topic2 / topic1))
beta_spread
beta_spread %>%
mutate(topic_num = ifelse(log_ratio > 0 , "Topic 2", "Topic 1")) %>%
filter(log_ratio > 20 | log_ratio < -20) %>%
mutate(term = reorder(term, log_ratio)) %>%
ggplot(aes(term, log_ratio, fill = topic_num)) +
geom_col(show.legend = TRUE) +
labs(y = "Uniqueness in Topic",
x = NULL) +
coord_flip()
decade_topics_gamma <- tidy(decade_lda, matrix = "gamma")
decade_topics_gamma
custom_stop_words <- bind_rows(tibble(word = c("ooh", "na", "ya", "la", "ey", "po", "oo", "tas", "ayy", "uh", "da", "whoa", "mmmm", "ayyy", "du",
"su", "x6"),
lexicon = c("custom")),
stop_words)
